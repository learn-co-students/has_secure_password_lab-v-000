class User < ActiveRecord::Base

  has_secure_password

  validates_confirmation_of :password

  # def password_valid
  #    errors.add(:password, "does not match") unless password == password_confirmation
  # end

  def password=(new_password)
    @password = new_password
    salt = BCrypt::Engine::generate_salt
    hashed = BCrypt::Engine::hash_secret(new_password, salt)
    self.password_digest = salt + hashed
  end

  # authenticate(password: string) -> User?
  def authenticate(password)
    # Salts generated by generate_salt are always 29 chars long.
    salt = password_digest[0..28]
    hashed = BCrypt::Engine::hash_secret(password, salt)
    if (salt + hashed) == self.password_digest
      self
    else
      false
    end
  end

end
